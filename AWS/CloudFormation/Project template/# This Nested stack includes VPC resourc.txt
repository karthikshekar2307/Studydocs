# This Nested stack includes VPC resources (Subnet/Route Table/Subnet and gateway configuration)

AWSTemplateFormatVersion: 2010-09-09
Description: Nested stack template

#=============================================================================================

Parameters:

# VPC Parameters
  VpcBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: VPC CIDR Range

# Public Subnet
  PublicSubnetBlock:
    Type: String
    Default: 10.0.1.0/24
    Description: Public SN CIDR

# Private Subnet 01
  PrivateSubnetBlock:
    Type: String
    Default: 10.0.2.0/24
    Description: First Private Subnet

# Private Subnet 02
  PrivateSubnetBlock2:
    Type: String
    Default: 10.0.3.0/24
    Description: Second Private Subnet

#=============================================================================================

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
         default: Webserver VPC Network Configuration
         Parameters:
           - VpcBlock
           - PublicSubnetBlock
           - PrivateSubnetBlock
           - PrivateSubnetBlock2
    ParameterLabels:
      VpcBlock:
        Default: VPC CIDR Range Selection

#=============================================================================================

Resources:

# VPC Resource Creation

  WebServerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcBlock
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WebserverVPC"

# Public Subnet Resource creation

  WebServerPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref PublicSubnetBlock
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WebServerPublicSubnet"
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs:
              Ref: AWS::Region 

# Private Subnet Resource creation
  
  WebServerPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref PrivateSubnetBlock
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WebServerPrivateSubnet"
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs:
              Ref: AWS::Region

# Second Private Subnet Resource creation

  WebServerPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref PrivateSubnetBlock2
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WebServerPrivateSubnet2"
      AvailabilityZone:
        Fn::Select:
          - '2'
          - Fn::GetAZs:
              Ref: AWS::Region

# Route Table resource configuration (Public Network)

  WebServerRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WebServerVPC
      Tags:
        - Key: Name
          Value: Public Subnet
        - Key: Name
          Value: Public Network

# Route Table resource configuration (Private Network)

  WebServerRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WebServerVPC
      Tags:
        - Key: Name
          Value: Private Subnet
        - Key: Name
          Value: Private Network

# Route Table resource configuration (Private Network2)

  WebServerRouteTable03:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WebServerVPC
      Tags:
        - Key: Name
          Value: Private Subnet
        - Key: Name
          Value: Private Network

# Public subnet Route table association

  PublicSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPublicSubnet
      RouteTableId: !Ref WebServerRouteTable01

# Private subnet Route table association

  PrivateSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPrivateSubnet
      RouteTableId: !Ref WebServerRouteTable02

# Private subnet2 Route table association

  PrivateSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPrivateSubnet2
      RouteTableId: !Ref WebServerRouteTable03

# Creation of Internet Gateway

  InternetGateway:
    Type: AWS::EC2::InternetGateway

# VPC Gateway attachment

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref WebServerVPC

# Update Route to Internet Gateway

  InternetRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WebServerRouteTable01
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

# NAT Gateway Creation
  NatGateway:
    DependsOn: NatEIP
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatEIP
        - AllocationId
      SubnetId: !Ref WebServerPublicSubnet

  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

# Update Route to NAT Gateway
  NATRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref WebServerRouteTable02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway


#=============================================================================================

Outputs:
  WebserverPublicSubnet: 
    Description: Public Subnet ID
    Value: !Ref WebServerPublicSubnet
  WebserverPrivateSubnet: 
    Description: Public Subnet ID
    Value: !Ref WebServerPrivateSubnet
  WebserverPrivateSubnet2: 
    Description: Public Subnet ID
    Value: !Ref WebServerPrivateSubnet2
  WebServerVPC:
    Description: Webserver VPC ID
    Value: !Ref WebServerVPC
Â© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
