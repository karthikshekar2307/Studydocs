4. Parameters
----------------

***** Parameters introduction

- Parameters: Enables us to input custom values to our template each time when we create or update stack

- We can have maximum of 60 parameters in a cfn template

- Each parameter must be given a logical name (logical id) which must be alphanumeric and unique among all logical names within the template.

- Each parameter must be assigned a parameter type that is supported by AWS CloudFormation.

- Each parameter must be assigned a value at runtime for AWS Cloudformation to successfully provision the stack. We can optionally specify a default value for AWS CloudFormation to use unless another value is provided.

- Parameters must be declared and referenced within the same template.

- We can reference parameters from the resources and outputs sections of the template.

Syntax
Parameters:
  ParameterLogicalID:
    Type: Datatype
    ParameterProperty: Value


Example:
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedVAlues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro



- ParameterProperties


***** Add Keyname as parameter

AWSTemplateFormatVersion: 2010-09-09
Description: Basic EC2 Instance

Parameters:
  MyKeyName:
    Description: Select the key name from the list
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  DevEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageID: ami-2ksdjfysd121sdgfdf
      InstanceType: t2.micro
      KeyName: !Ref MyKeyName
      SecurityGroups:
        - default
        - !Ref SSHSecurityGroup
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: my new SSh SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIP: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIP: 0.0.0.0/0


***** Add availability zone as parameter

AWSTemplateFormatVersion: 2010-09-09
Description: AZ Parameter Demo

Parameters:
  MyKeyName:
    Description: Select the key name from the list
    Type: AWS::EC2::KeyPair::KeyName
  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: us-east-2a
    AllowedValues:
      - us-east-2a
      - us-east-2b
      - us-east-2c

Resources:
  DevEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageID: ami-2ksdjfysd121sdgfdf
      InstanceType: t2.micro
      KeyName: !Ref MyKeyName
      SecurityGroups:
        - default
        - !Ref SSHSecurityGroup
      AvailabilityZone: !Ref MyAvailabilityZone
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: my new SSh SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIP: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIP: 0.0.0.0/0


***** Add Instance type as parameter


AWSTemplateFormatVersion: 2010-09-09
Description: AZ Parameter Demo

Parameters:
  MyKeyName:
    Description: Select the key name from the list
    Type: AWS::EC2::KeyPair::KeyName
  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: us-east-2a
    AllowedValues:
      - us-east-2a
      - us-east-2b
      - us-east-2c
  MyInstanceType:
    Description: Select Ec2 instance type from list
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small

Resources:
  DevEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageID: ami-2ksdjfysd121sdgfdf
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyKeyName
      SecurityGroups:
        - default
        - !Ref SSHSecurityGroup
      AvailabilityZone: !Ref MyAvailabilityZone
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: my new SSh SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIP: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIP: 0.0.0.0/0


***** Add instance type as parameter SSM

AWSTemplateFormatVersion: 2010-09-09
Description: AZ Parameter Demo

Parameters:
  MyKeyName:
    Description: Select the key name from the list
    Type: AWS::EC2::KeyPair::KeyName
  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: us-east-2a
    AllowedValues:
      - us-east-2a
      - us-east-2b
      - us-east-2c
  MyInstanceType:
    Description: Select Ec2 instance type from SSM
    Type: AWS::SSM::Parameter::Value<string>
    

Resources:
  DevEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageID: ami-2ksdjfysd121sdgfdf
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyKeyName
      SecurityGroups:
        - default
        - !Ref SSHSecurityGroup
      AvailabilityZone: !Ref MyAvailabilityZone
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: my new SSh SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIP: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIP: 0.0.0.0/0